{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/GitHub/Todo-App/src/components/Todo.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst usePrevious = value => {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\n_s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\nexport default function Todo({\n  id,\n  name,\n  completed,\n  onCheckChange,\n  onClickDelete,\n  onClickSave\n}) {\n  _s2();\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [input, setInput] = useState(name);\n  const wasEditing = usePrevious(isEditing);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onClickSave(id, input);\n    setIsEditing(false);\n  };\n\n  useEffect(() => {\n    if (isEditing) {\n      editFieldRef.current.focus();\n    } else {\n      editButtonRef.current.focus();\n    }\n  }, [isEditing]);\n\n  const editingTemplate = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"stack-small\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: id,\n        children: [\"New name for \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: editFieldRef,\n        type: \"text\",\n        className: \"todo-text\",\n        id: id,\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn todo-cancel\",\n        onClick: () => setIsEditing(false),\n        children: [\"Cancel\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"renaming \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn__primary todo-edit\",\n        children: [\"Save\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"New name for \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n\n  const viewTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-cb\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: id,\n        type: \"checkbox\",\n        defaultChecked: completed,\n        onChange: onCheckChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: id,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        ref: editButtonRef,\n        type: \"button\",\n        className: \"btn\",\n        onClick: () => setIsEditing(true),\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn__danger\",\n        onClick: () => onClickDelete(id),\n        children: [\"Delete \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo\",\n    children: isEditing ? editingTemplate : viewTemplate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(Todo, \"xutK4ygctHaC2hAOIRzTgGW99g4=\", false, function () {\n  return [usePrevious];\n});\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/apple/Documents/GitHub/Todo-App/src/components/Todo.js"],"names":["React","useState","useRef","useEffect","usePrevious","value","ref","current","Todo","id","name","completed","onCheckChange","onClickDelete","onClickSave","editFieldRef","editButtonRef","isEditing","setIsEditing","input","setInput","wasEditing","handleSubmit","e","preventDefault","focus","editingTemplate","target","viewTemplate"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\n\nconst usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function Todo({id, name, completed, onCheckChange, onClickDelete, onClickSave}) {\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [input, setInput] = useState(name);\n\n  const wasEditing = usePrevious(isEditing);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onClickSave(id, input);\n    setIsEditing(false);\n  }\n\n  useEffect(() => {\n    if (isEditing) {\n      editFieldRef.current.focus();\n    } else {\n      editButtonRef.current.focus();\n    }\n  }, [isEditing]);\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={id}>\n          New name for {name}\n        </label>\n        <input ref={editFieldRef} type=\"text\" className=\"todo-text\" id={id} value={input} onChange={(e) => setInput(e.target.value)} />\n      </div>\n      <div className=\"btn-group\">\n        <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setIsEditing(false)}>\n          Cancel \n          <span className=\"visually-hidden\">renaming {name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">New name for {name}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n        <input id={id} type=\"checkbox\" defaultChecked={completed} onChange={onCheckChange} />\n        <label className=\"todo-label\" htmlFor={id}>\n          {name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button ref={editButtonRef} type=\"button\" className=\"btn\" onClick={() => setIsEditing(true)}>\n          Edit <span className=\"visually-hidden\">{name}</span>\n        </button>\n        <button type=\"button\" className=\"btn btn__danger\" onClick={() => onClickDelete(id)}>\n          Delete <span className=\"visually-hidden\">{name}</span>\n        </button>\n      </div>\n    </div>\n  );\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}"]},"metadata":{},"sourceType":"module"}