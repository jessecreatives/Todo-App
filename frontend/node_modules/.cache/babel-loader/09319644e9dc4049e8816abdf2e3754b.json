{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/GitHub/todo/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  addTask\n}) => {\n  _s();\n\n  const [input, setInput] = useState('');\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addTask(input);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"label-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-todo-input\",\n        className: \"label__lg\",\n        children: \"What needs to be done?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"new-todo-input\",\n      className: \"input input__lg\",\n      name: \"text\",\n      value: input,\n      onChange: handleChange,\n      autoComplete: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn__primary btn__lg\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/apple/Documents/GitHub/todo/src/components/Form.js"],"names":["React","useState","Form","addTask","input","setInput","handleChange","e","target","value","handleSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AACxBF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACI,cAAF;AACAR,IAAAA,OAAO,CAACC,KAAD,CAAP;AACH,GAHD;;AAKA,sBACI;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA,6BACA;AAAO,QAAA,OAAO,EAAC,gBAAf;AAAgC,QAAA,SAAS,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAC,gBAFP;AAGI,MAAA,SAAS,EAAC,iBAHd;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,KAAK,EAAEN,KALX;AAMI,MAAA,QAAQ,EAAEE,YANd;AAOI,MAAA,YAAY,EAAC;AAPjB;AAAA;AAAA;AAAA;AAAA,YANJ,eAeI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,0BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA/BD;;GAAMJ,I;;KAAAA,I;AAiCN,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst Form = ({addTask}) => {\n    const [input, setInput] = useState('');\n\n    const handleChange = (e) => {\n        setInput(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addTask(input);\n    }\n    \n    return (\n        <form onSubmit={handleSubmit}>\n            <h2 className=\"label-wrapper\">\n            <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n                What needs to be done?\n            </label>\n            </h2>\n            <input \n                type=\"text\"\n                id='new-todo-input'\n                className='input input__lg'\n                name='text'\n                value={input}\n                onChange={handleChange}\n                autoComplete='off'\n            />\n            <button type=\"submit\" className='btn btn__primary btn__lg'>Add</button>\n        </form>\n    );\n};\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}