{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/GitHub/Todo-App/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo({\n  id,\n  name,\n  completed,\n  onCheckChange,\n  onClickDelete,\n  onClickSave\n}) {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [input, setInput] = useState(name);\n\n  const editingTemplate = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: id,\n        children: [\"New name for \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"todo-text\",\n        id: id,\n        value: input,\n        onChange: () => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn todo-cancel\",\n        onClick: () => setIsEditing(false),\n        children: [\"Cancel\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"renaming \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn__primary todo-edit\",\n        onClick: () => onClickSave(id, input),\n        children: [\"Save\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"New name for \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n\n  const viewTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-cb\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: id,\n        type: \"checkbox\",\n        defaultChecked: completed,\n        onChange: onCheckChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: id,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: () => setIsEditing(true),\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn__danger\",\n        onClick: () => onClickDelete(id),\n        children: [\"Delete \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo\",\n    children: isEditing ? editingTemplate : viewTemplate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Todo, \"vz6MKHFpPvd9oVMwIcXnFJUHXZ8=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/apple/Documents/GitHub/Todo-App/src/components/Todo.js"],"names":["React","useState","Todo","id","name","completed","onCheckChange","onClickDelete","onClickSave","isEditing","setIsEditing","input","setInput","editingTemplate","e","target","value","viewTemplate"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nexport default function Todo({id, name, completed, onCheckChange, onClickDelete, onClickSave}) {\n    const [isEditing, setIsEditing] = useState(false);\n    const [input, setInput] = useState(name);\n\n    const editingTemplate = (\n      <form className=\"stack-small\">\n        <div className=\"form-group\">\n          <label className=\"todo-label\" htmlFor={id}>\n            New name for {name}\n          </label>\n          <input type=\"text\" className=\"todo-text\" id={id} value={input} onChange={() => setInput(e.target.value)} />\n        </div>\n        <div className=\"btn-group\">\n          <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setIsEditing(false)}>\n            Cancel \n            <span className=\"visually-hidden\">renaming {name}</span>\n          </button>\n          <button type=\"submit\" className=\"btn btn__primary todo-edit\" onClick={() => onClickSave(id, input)}>\n            Save\n            <span className=\"visually-hidden\">New name for {name}</span>\n          </button>\n        </div>\n      </form>\n    );\n\n    const viewTemplate = (\n      <div className=\"stack-small\">\n        <div className=\"c-cb\">\n          <input id={id} type=\"checkbox\" defaultChecked={completed} onChange={onCheckChange} />\n          <label className=\"todo-label\" htmlFor={id}>\n            {name}\n          </label>\n        </div>\n        <div className=\"btn-group\">\n          <button type=\"button\" className=\"btn\" onClick={() => setIsEditing(true)}>\n            Edit <span className=\"visually-hidden\">{name}</span>\n          </button>\n          <button type=\"button\" className=\"btn btn__danger\" onClick={() => onClickDelete(id)}>\n            Delete <span className=\"visually-hidden\">{name}</span>\n          </button>\n        </div>\n      </div>\n    );\n\n    return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}"]},"metadata":{},"sourceType":"module"}