{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/GitHub/Todo-App/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo({\n  id,\n  name,\n  completed,\n  onCheckChange,\n  onClickDelete,\n  onClickEdit,\n  onClickSave,\n  onEdit\n}) {\n  _s();\n\n  const [isEditting, setIsEditting] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-cb\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: id,\n        type: \"checkbox\",\n        defaultChecked: completed,\n        onChange: onCheckChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), isEditting ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: onEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: id,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: onClickSave,\n        children: [\"Save \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: onClickEdit,\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn__danger\",\n        onClick: onClickDelete,\n        children: [\"Delete \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"yh7QUDRi3REtsGmjVUJzBLQ25q8=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/apple/Documents/GitHub/Todo-App/src/components/Todo.js"],"names":["React","useState","Todo","id","name","completed","onCheckChange","onClickDelete","onClickEdit","onClickSave","onEdit","isEditting","setIsEditting","isEditing"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,EAAD;AAAKC,EAAAA,IAAL;AAAWC,EAAAA,SAAX;AAAsBC,EAAAA,aAAtB;AAAqCC,EAAAA,aAArC;AAAoDC,EAAAA,WAApD;AAAiEC,EAAAA,WAAjE;AAA8EC,EAAAA;AAA9E,CAAd,EAAqG;AAAA;;AAChH,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AAEA,sBACI;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAO,QAAA,EAAE,EAAEE,EAAX;AAAe,QAAA,IAAI,EAAC,UAApB;AAA+B,QAAA,cAAc,EAAEE,SAA/C;AAA0D,QAAA,QAAQ,EAAEC;AAApE;AAAA;AAAA;AAAA;AAAA,cADF,EAEGK,UAAU,gBACT;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEP,IAA1B;AAAgC,QAAA,QAAQ,EAAEM;AAA1C;AAAA;AAAA;AAAA;AAAA,cADS,gBAEN;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,OAAO,EAAEP,EAAvC;AAAA,kBACFC;AADE;AAAA;AAAA;AAAA;AAAA,cAJP;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACGS,SAAS,gBACR;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,KAAhC;AAAsC,QAAA,OAAO,EAAEJ,WAA/C;AAAA,yCACK;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,oBAAmCL;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADL;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,gBAIL;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,KAAhC;AAAsC,QAAA,OAAO,EAAEI,WAA/C;AAAA,yCACE;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,oBAAmCJ;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cALP,eASE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAkD,QAAA,OAAO,EAAEG,aAA3D;AAAA,2CACS;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,oBAAmCH;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADT;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GA5BuBF,I;;KAAAA,I","sourcesContent":["import React, {useState} from 'react';\n\nexport default function Todo({id, name, completed, onCheckChange, onClickDelete, onClickEdit, onClickSave, onEdit}) {\n    const [isEditting, setIsEditting] = useState(false);\n    \n    return (\n        <li className=\"todo stack-small\">\n          <div className=\"c-cb\">\n            <input id={id} type=\"checkbox\" defaultChecked={completed} onChange={onCheckChange} />\n            {isEditting ? (\n              <input type=\"text\" value={name} onChange={onEdit} />\n            ) : (<label className=\"todo-label\" htmlFor={id}>\n              {name}\n            </label>)}\n          </div>\n          <div className=\"btn-group\">\n            {isEditing ? (\n              <button type=\"button\" className=\"btn\" onClick={onClickSave}>\n              Save <span className=\"visually-hidden\">{name}</span>\n            </button>\n            ) : (<button type=\"button\" className=\"btn\" onClick={onClickEdit}>\n              Edit <span className=\"visually-hidden\">{name}</span>\n            </button>)}\n            \n            <button type=\"button\" className=\"btn btn__danger\" onClick={onClickDelete}>\n              Delete <span className=\"visually-hidden\">{name}</span>\n            </button>\n          </div>\n        </li>\n    );\n}"]},"metadata":{},"sourceType":"module"}